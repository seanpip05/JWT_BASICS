### Stage 2 JWT Authentication API Tests - SIMPLE COPY-PASTE VERSION
### Save this file as: stage2-jwt-tests-simple.http
### Use with IntelliJ IDEA Ultimate HTTP Client

### INSTRUCTIONS:
### 1. Run login request below
### 2. Copy the accessToken from response
### 3. Paste it in the "PASTE_TOKEN_HERE" placeholders below

### Variables
@baseUrl = http://localhost:8080
@contentType = application/json

### ===================================
### STEP 1: LOGIN TO GET TOKENS
### ===================================

### 1.1 Login as Admin
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "admin",
  "password": "admin"
}

### COPY THE TOKEN FROM RESPONSE ABOVE AND PASTE BELOW

###

### 1.2 Login as User
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "user",
  "password": "user"
}

### COPY THE TOKEN FROM RESPONSE ABOVE FOR USER TESTS

### ===================================
### STEP 2: TEST PROTECTED ENDPOINTS
### ===================================

### 2.1 Test Admin Access - PASTE ADMIN TOKEN BELOW - Authorization: Bearer PASTE_ADMIN_TOKEN_HERE
GET {{baseUrl}}/api/protected-message-admin
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc2MDQ1MzMyMiwiZXhwIjoxNzYwNDUzNjIyLCJyb2xlcyI6WyJST0xFX0FETUlOIiwiUk9MRV9VU0VSIl0sImlzc3VlZEJ5IjoibGVhcm5pbmcgSldUIHdpdGggU3ByaW5nIFNlY3VyaXR5In0._N2avqATmtop3iGSBGGRhCF_gCUqCfetj4ggQ0XXIOM
Content-Type: {{contentType}}

###

### 2.2 Test User Access - PASTE USER TOKEN BELOW
GET {{baseUrl}}/api/protected-message-admin
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc2MDQ1MzMyMiwiZXhwIjoxNzYwNDUzNjIyLCJyb2xlcyI6WyJST0xFX0FETUlOIiwiUk9MRV9VU0VSIl0sImlzc3VlZEJ5IjoibGVhcm5pbmcgSldUIHdpdGggU3ByaW5nIFNlY3VyaXR5In0._N2avqATmtop3iGSBGGRhCF_gCUqCfetj4ggQ0XXIOM
Content-Type: {{contentType}}

###

### 2.3 Test Access Without Token (Should fail with 401)
GET {{baseUrl}}/api/protected-message
Content-Type: {{contentType}}

### ===================================
### STEP 2.5: TEST REFRESH TOKEN ENDPOINT
### ===================================

### 2.5 Test Refresh Token - PASTE REFRESH TOKEN BELOW
POST {{baseUrl}}/api/refresh_token
Content-Type: {{contentType}}

{
  "refreshToken": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc2MDQ1MzMyMiwiZXhwIjoxNzYxMDU4MTIyLCJ0eXBlIjoicmVmcmVzaCJ9.iGa8XkJmhJ9tTQTgEAopW_1PBxGax_1KZhXdmbJ4_qQ"
}

###


### ===================================
### STEP 3: TOKEN VALIDATION TESTS
### ===================================

### 3.1 Test Invalid Token Format
GET {{baseUrl}}/api/protected-message
Authorization: Bearer invalid.jwt.token.here
Content-Type: {{contentType}}

###

### 3.2 Test Malformed Bearer Header
GET {{baseUrl}}/api/protected-message
Authorization: InvalidBearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc2MDQ1MzMyMiwiZXhwIjoxNzYxMDU4MTIyLCJ0eXBlIjoicmVmcmVzaCJ9.iGa8XkJmhJ9tTQTgEAopW_1PBxGax_1KZhXdmbJ4_qQ
Content-Type: {{contentType}}

###

### 3.3 Test Empty Bearer Token
GET {{baseUrl}}/api/protected-message
Authorization: Bearer
Content-Type: {{contentType}}

###

### 3.4 Test Token as Query Parameter - PASTE TOKEN BELOW
GET {{baseUrl}}/api/protected-message?token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc2MDQ1MzMyMiwiZXhwIjoxNzYwNDUzNjIyLCJyb2xlcyI6WyJST0xFX0FETUlOIiwiUk9MRV9VU0VSIl0sImlzc3VlZEJ5IjoibGVhcm5pbmcgSldUIHdpdGggU3ByaW5nIFNlY3VyaXR5In0._N2avqATmtop3iGSBGGRhCF_gCUqCfetj4ggQ0XXIOM
Content-Type: {{contentType}}

### ===================================
### STEP 4: LOGIN FAILURE TESTS
### ===================================

### 4.1 Test Invalid Password
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "admin",
  "password": "wrongpassword"
}

###

### 4.2 Test Non-existent User
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "nonexistent",
  "password": "password"
}

###

### 4.3 Test Empty Credentials
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "",
  "password": ""
}

###

### 4.4 Test Missing Password
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "admin"
}

### ===================================
### STEP 5: SECURITY TESTS
### ===================================

### 5.1 SQL Injection Attempt
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "admin'; DROP TABLE users; --",
  "password": "admin"
}

###

### 5.2 XSS Attempt
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "<script>alert('xss')</script>",
  "password": "admin"
}

###

### 5.3 Very Long Username
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
  "password": "admin"
}

### ===================================
### STEP 6: CORS TESTS
### ===================================

### 6.1 CORS Preflight for Login
OPTIONS {{baseUrl}}/api/login
Origin: http://localhost:5173
Access-Control-Request-Method: POST
Access-Control-Request-Headers: Content-Type

###

### 6.2 CORS Preflight for Protected Endpoint
OPTIONS {{baseUrl}}/api/protected-message
Origin: http://localhost:5173
Access-Control-Request-Method: GET
Access-Control-Request-Headers: Authorization

### ===================================
### STEP 7: QUICK EXAMPLES WITH REAL TOKENS
### ===================================

### Example: Recent working tokens (replace with your fresh tokens)

### 7.1 Example Fresh Login
POST {{baseUrl}}/api/login
Content-Type: {{contentType}}

{
  "username": "admin",
  "password": "admin"
}

### Response will look like:
### {
###   "accessToken": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc1MDUwOTk3NCwiZXhwIjoxNzUwNTEwMjc0LCJyb2xlcyI6WyJST0xFX0FETUlOIl0sImlzc3VlZEJ5IjoibGVhcm5pbmcgSldUIHdpdGggU3ByaW5nIFNlY3VyaXR5In0.GCYNfkYgGCwWxL4RwZZKfZJOHKfPXwef9oD8GLpRYDU"
### }

###

### 7.2 Use Fresh Token Immediately
GET {{baseUrl}}/api/protected-message
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc1MDUwOTk3NCwiZXhwIjoxNzUwNTEwMjc0LCJyb2xlcyI6WyJST0xFX0FETUlOIl0sImlzc3VlZEJ5IjoibGVhcm5pbmcgSldUIHdpdGggU3ByaW5nIFNlY3VyaXR5In0.GCYNfkYgGCwWxL4RwZZKfZJOHKfPXwef9oD8GLpRYDU
Content-Type: {{contentType}}

### REPLACE THE TOKEN ABOVE WITH YOUR FRESH TOKEN
